import { EventEmitter } from '../stencil-public-runtime';
import { JsonSQLite, JsonTable, JsonColumn, JsonIndex, JsonTrigger, JsonView, JsonProgressListener } from '../interfaces/interfaces';
export declare class UtilsExportJSON {
    static createExportObject(db: any, sqlObj: JsonSQLite, exportProgress: EventEmitter<JsonProgressListener>): Promise<JsonSQLite>;
    static getViewsName(mDb: any): Promise<JsonView[]>;
    static getTablesFull(db: any, resTables: any[], exportProgress: EventEmitter<JsonProgressListener>): Promise<JsonTable[]>;
    static getSchema(sqlStmt: string): Promise<JsonColumn[]>;
    static getIndexes(db: any, tableName: string): Promise<JsonIndex[]>;
    static getTriggers(db: any, tableName: string): Promise<JsonTrigger[]>;
    static getTablesPartial(db: any, resTables: any[], exportProgress: EventEmitter<JsonProgressListener>): Promise<JsonTable[]>;
    static getPartialModeData(db: any, resTables: any[]): Promise<any>;
    static getTablesNameSQL(db: any): Promise<any[]>;
    static getTablesModified(db: any, tables: any[], syncDate: number): Promise<any>;
    static getSynchroDate(db: any): Promise<number>;
    static getLastExportDate(db: any): Promise<number>;
    static setLastExportDate(db: any, lastExportedDate: string): Promise<any>;
    static delExportedRows(db: any): Promise<void>;
    static modEmbeddedParentheses(sstr: string): Promise<string>;
    static indexOfChar(str: string, char: string): number[];
}
